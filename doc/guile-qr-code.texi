\input texinfo
@c -*-texinfo-*-
@c %**start of header
@setfilename guile-qr-code.info
@documentencoding UTF-8
@settitle Guile-QR-Code Reference Manual
@c %**end of header
@include version.texi

@copying
This manual documents Guile-QR-Code version @value{VERSION}.

Copyright (C) 2024 Artyom V. Poptsov

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
copy of the license is included in the section entitled ``GNU Free
Documentation License.''
@end copying

@dircategory The Algorithmic Language Scheme
@direntry
* Guile-QR-Code: (guile-qr-code).  Guile Quick-Response (QR) code library.
@end direntry

@setchapternewpage odd

@titlepage
@sp 10

@title Guile-QR-Code Reference Manual
@subtitle For Guile-QR-Code @value{VERSION}

@author Artyom V. Poptsov

@page
@vskip 0pt plus 1filll
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@finalout
@headings double

@ifnottex
@node Top, Introduction, (dir), (dir)
@top The Guile-QR-Code Reference Manual

@insertcopying
@sp 1
@end ifnottex

@menu
* Introduction::
* Installation::
* API Reference::

Appendices

* GNU Free Documentation License::  The license of this manual.

Indices

* Type Index::
* Procedure Index::
* Concept Index::

@end menu

@contents

@c -----------------------------------------------------------------------------
@node Introduction
@chapter Introduction

Guile-QR-Code is a @url{https://www.gnu.org/software/guile/, GNU Guile}
library that provides API for generating
@url{https://en.wikipedia.org/wiki/QR_code, Quick-Response (QR) codes}.

@section Acknowledgments

The core of the QR code generator is based on the
@url{https://gitlab.com/jobol/qrcode-gen, QR Code generator library (Scheme
R7RS)} written by José Bollo.

@c -----------------------------------------------------------------------------
@node Installation
@chapter Installation

Guile-QR-Code sources are available form GitHub at
@url{https://github.com/artyom-poptsov/guile-qr-code}.  This section describes
Guile-QR-Code requirements and installation process.

Guile-QR-Code depends on the following packages:
@itemize
@item @url{https://www.gnu.org/software/guile/, GNU Guile}, version 2.2 or later
@item @url{http://www.nongnu.org/guile-lib/, Guile Library}, version 0.1.8 or later.
@item @url{https://github.com/artyom-poptsov/guile-png, Guile-PNG}, version 0.7.3 or later.
@end itemize

@section GNU Guix

@subsection Development version
@example
$ guix build -f ./guix.scm
$ guix package -f ./guix.scm
@end example

@section Manual Installation

To build the latest version of Guile-QR-Code from the sources, you need to
download the sources from GitHub or clone them using Git@footnote{A good
introduction to Git is free Pro Git book, which is available online at
@url{https://git-scm.com/book/en/v2}}.

Cloning can be done as follows:

@example
$ git clone git@@github.com:artyom-poptsov/guile-qr-code.git
@end example

Next, you should configure the sources:

@example
$ cd guile-qr-code/
$ autoreconf -vif
$ ./configure
@end example

And finally build and install the library:

@example
$ make
$ make install
@end example

For a basic explanation of the installation of the package, see the
@file{INSTALL} file.

Please @strong{note} that you will need
@url{https://www.gnu.org/software/automake/, Automake} version 1.12 or later
to run self-tests with @command{make check} (but the library itself can be
built with older Automake version such as 1.11).

@strong{important} You probably want to call @command{configure} with
the @option{--with-guilesitedir} option so that this package is
installed in Guile's default path.  But, if you don't know where your
Guile site directory is, run @command{configure} without the option,
and it will give you a suggestion.

@c -----------------------------------------------------------------------------
@node API Reference
@chapter API Reference

This chapter describes the Guile-QR-Code API.

@menu
* QR Code::             High-level procedures to read and write images.
* Encoder::              Low-lever API.
@end menu

@c -----------------------------------------------------------------------------
@node QR Code
@section QR Code

@deffn {Scheme Procedure} qr-encode-text data [#:ecl=ECC-LOW]
Generate a QR code based on a text @var{data}.  Return a QR Code.
@end deffn

@deffn {Scheme Procedure} qr-encode-binary data [#:ecl=ECC-LOW]
Generate a QR code based on a binary @var{data}.  Return a QR Code.
@end deffn

@deffn {Scheme Procedure} qr-code->string qr-code @
       [#:size=%default-qr-code-ascii-size] @
       [#:foreground-char=#\█] @
       [#:background-char=#\space] @
       [#:width-scale-factor=2] @
       [#:height-scale-factor=1] @
       [#:foreground-color=#f] @
       [#:background-color=#f] @
       [#:margin=2]

Convert a @var{qr-code} to a string.

@end deffn

@deffn {Scheme Procedure} qr-code->png-image qr-code @
       [#:size=%default-qr-code-size] @
       [#:margin=0] @
       [#:foreground-color=#vu8(0 0 0)] @
       [#:background-color=#vu8(255 255 255)]

Convert a @var{qr-code} to a PNG image.  This procedure requires Guile-PNG.

@end deffn

@deffn {Scheme Procedure} qr-code->svg-image qr-code @
       [#:border=1] @
       [#:foreground-color=#vu8(0 0 0)] @
       [#:background-color=#vu8(255 255 255)]

Return a string of SVG code for an image depicting the given @var{qr-code},
with the given number of @var{border} modules.  The string always uses Unix
newlines (@code{\n}), regardless of the platform.

@end deffn


@c -----------------------------------------------------------------------------
@node Encoder
@section Encoder

@deftp {Record} <QR-code>

This record represents a QR code.

@end deftp

@deffn {Scheme Procedure} encode-text str ecl

Returns a QR Code representing the given Unicode text string @var{str} at the
given error correction level @var{ecl}.  As a conservative upper bound, this
function is guaranteed to succeed for strings that have 738 or fewer Unicode
code points (not UTF-16 code units) if the low error correction level is
used. The smallest possible QR Code version is automatically chosen for the
output.  The ECC level of the result may be higher than the @var{ecl} argument
if it can be done without increasing the version.

@end deffn

@deffn {Scheme Procedure} encode-binary bin ecl

Returns a QR Code representing the given binary data @var{bin} at the given
error correction level @var{ecl}.  This function always encodes using the
binary segment mode, not any text mode.  The maximum number of bytes allowed
is 2953.  The smallest possible QR Code version is automatically chosen for
the output.  The ECC level of the result may be higher than the ecl argument
if it can be done without increasing the version.

@end deffn

@c -----------------------------------------------------------------------------
@node GNU Free Documentation License
@appendix GNU Free Documentation License

@include fdl.texi

@include indices.texi

@bye
